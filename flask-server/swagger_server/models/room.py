# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.user import User

from swagger_server import util


class Room(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, host_id: str=None, users: List[User]=None):  # noqa: E501
        """Room - a model defined in Swagger

        :param id: The id of this Room.  # noqa: E501
        :type id: str
        :param host_id: The host_id of this Room.  # noqa: E501
        :type host_id: str
        :param users: The users of this Room.  # noqa: E501
        :type users: List[User]
        """
        self.swagger_types = {
            'id': str,
            'host_id': str,
            'users': List[User]
        }

        self.attribute_map = {
            'id': 'id',
            'host_id': 'hostId',
            'users': 'Users'
        }

        self._id = id
        self._host_id = host_id
        self._users = users

    @classmethod
    def from_dict(cls, dikt) -> 'Room':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Room of this Room.  # noqa: E501
        :rtype: Room
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Room.


        :return: The id of this Room.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Room.


        :param id: The id of this Room.
        :type id: str
        """

        self._id = id

    @property
    def host_id(self) -> str:
        """Gets the host_id of this Room.


        :return: The host_id of this Room.
        :rtype: str
        """
        return self._host_id

    @host_id.setter
    def host_id(self, host_id: str):
        """Sets the host_id of this Room.


        :param host_id: The host_id of this Room.
        :type host_id: str
        """

        self._host_id = host_id

    @property
    def users(self) -> List[User]:
        """Gets the users of this Room.


        :return: The users of this Room.
        :rtype: List[User]
        """
        return self._users

    @users.setter
    def users(self, users: List[User]):
        """Sets the users of this Room.


        :param users: The users of this Room.
        :type users: List[User]
        """

        self._users = users
